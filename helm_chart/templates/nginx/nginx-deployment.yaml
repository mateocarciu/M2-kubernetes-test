apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nginx
  labels:
    app: {{ .Release.Name }}-nginx
  namespace: {{ default "orocommerce" .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-nginx
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-nginx
    spec:
      securityContext:
        {{- with .Values.appSecurityContext }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      initContainers:
      - name: {{ .Values.nginx.initContainerName }}
        image: {{ .Values.images.orocomerceImage }}:{{ .Values.images.orocomerceImageTag }}
        command:
          - "sh"
          - "-c"
          - "until nc -z {{ .Release.Name }}-app 9000; do echo \"Waiting for php-fpm connection...\"; sleep 1; done && until nc -z {{ .Release.Name }}-websocket 8080; do echo \"Waiting for websocket connection...\"; sleep 1; done && /usr/local/bin/docker-entrypoint.sh nginx-init && sed -i '/gridfs/d; /mongo/d' /opt/oro-nginx/etc/sites-available/*.conf"
        envFrom:
            - secretRef:
                name: {{ .Release.Name }}-secret
        volumeMounts:
          - name: {{ .Release.Name }}-nginx-pvc
            mountPath: /opt/oro-nginx
        securityContext:
          {{- with .Values.rootSecurityContext }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
      containers:
      - name: {{ .Values.nginx.defaultContainerName }}
        image: {{ .Values.images.orocomerceImageBaseRuntime }}:{{ .Values.images.orocomerceImageBaseRuntimeTag }}
        ports:
          - containerPort: 80
        args:
          - "nginx"
        envFrom:
          - secretRef:
              name: {{ .Release.Name }}-secret
        resources:
            {{- with .Values.nginx.defaultContainerResource }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        livenessProbe:
          {{- with .Values.nginx.defaultLivenessProbe }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
        startupProbe:
          {{- with .Values.nginx.defaultStartupProbe }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
        volumeMounts:
          - name: {{ .Release.Name }}-nginx-pvc
            mountPath: /opt/oro-nginx
          - name: {{ .Release.Name }}-app-pvc
            mountPath: /var/www/oro
          - name: {{ .Release.Name }}-app-cache-pvc
            mountPath: /var/www/oro/var/cache
            readOnly: false
          - name: {{ .Release.Name }}-app-maintenance-pvc
            mountPath: /var/www/oro/var/maintenance
            readOnly: false
          - name: {{ .Release.Name }}-app-public-pvc
            mountPath: /var/www/oro/public/media
            readOnly: false
          - name: {{ .Release.Name }}-app-private-pvc
            mountPath: /var/www/oro/var/data
            readOnly: false
      volumes:
        - name: {{ .Release.Name }}-nginx-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-nginx-pvc
        - name: {{ .Release.Name }}-app-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-app-pvc
            readOnly: false
        - name: {{ .Release.Name }}-app-cache-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-app-cache-pvc
            readOnly: true
        - name: {{ .Release.Name }}-app-maintenance-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-app-maintenance-pvc
            readOnly: false
        - name: {{ .Release.Name }}-app-public-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-app-public-pvc
            readOnly: true
        - name: {{ .Release.Name }}-app-private-pvc
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-app-private-pvc
            readOnly: true
